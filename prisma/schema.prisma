// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  clerkUserId String   @unique
  name        String
  email       String   @unique
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  resumes        Resume[]
  coverLetters   CoverLetter[]
  assessments    Assessment[]
  industryInsight IndustryInsight?

  @@map("users")
}

model Resume {
  id        String   @id @default(cuid())
  userId    String
  content   Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("resumes")
}

model CoverLetter {
  id          String   @id @default(cuid())
  userId      String
  jobTitle    String?
  companyName String?
  content     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("cover_letters")
}

model Assessment {
  id        String   @id @default(cuid())
  userId    String
  questions Json?
  answers   Json?
  feedback  String?
  score     Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("assessments")
}

model IndustryInsight {
  id          String   @id @default(cuid())
  userId      String   @unique
  industry    String?
  insights    Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("industry_insights")
}
